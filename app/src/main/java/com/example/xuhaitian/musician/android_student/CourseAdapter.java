package com.example.xuhaitian.musician.android_student;import android.content.Context;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.Button;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import java.util.ArrayList;import java.util.Date;import java.util.List;/** * Created by lw on 2017/4/14. */public class CourseAdapter extends BaseAdapter {    private final int resourceId;    public Context mContext;    List<JSONObject> listData;    private LayoutInflater mLayoutInflater;    public CourseAdapter(Context context, int textViewResourceId, ArrayList<JSONObject> objects) {        resourceId = textViewResourceId;        mContext = context;        listData = objects;        mLayoutInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);    }    @Override    public int getCount() {        return listData.size();    }    @Override    public Object getItem(int position) {        return listData.get(position);    }    @Override    public long getItemId(int position) {        return position;    }    @Override    public View getView(int position, View convertView, ViewGroup parent) {        final JSONObject course = (JSONObject) getItem(position); // 获取当前项的Fruit实例        Log.e("course", course.toString());        View view = mLayoutInflater.inflate(resourceId, null);//实例化一个对象        TextView course_Name = (TextView) view.findViewById(R.id.course_Name);//获取该布局内的课程名视图        TextView comment = (TextView) view.findViewById(R.id.comment);//获取该布局内的评论视图        TextView teacher_Name = (TextView) view.findViewById(R.id.teacher_Name);//获取该布局内的老师名视图        Button start_teaching = (Button) view.findViewById(R.id.start_teaching);        start_teaching.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                MainActivity mainActivity = (MainActivity) mContext;                mainActivity.startTeaching(course);            }        });        try {            String type = course.getString("type");            if (type.equals("morningCourse")) {                for (int i = 0; i < course.getString("type").length(); i++) {                    layoutItemWithTime(view, R.drawable.morning, R.drawable.linerlayout_shape_morning, "" + "", "11:30");                }            } else if (type.equals("noonCourse")) {                layoutItemWithTime(view, R.drawable.noon, R.drawable.linerlayout_shape_noon, "13:30", "14:30");            } else if (type.equals("nightCourse")) {                layoutItemWithTime(view, R.drawable.evening, R.drawable.linerlayout_shape_night, "18:30", "21:30");            }            String teacher_name = "";            String courseName = "";            String teacher_comment = "";            JSONArray courseInfo = course.getJSONArray("value");            Date startDate = null;            Date endDate = null;            Log.e("name1", courseInfo.toString());            for (int i = 0; i < courseInfo.length(); i++) {//                JSONObject course_info_list_name = courseInfo.getJSONObject(i).getJSONObject("teacher");//                JSONObject course_info_list_comment = courseInfo.getJSONObject(i).getJSONObject("teacher");//                courseName += course_info_list_name.getJSONObject("name");//                teacher_comment += course_info_list_comment.getJSONObject("comment");                teacher_name = courseInfo.getJSONObject(i).getJSONObject("teacher").getString("name");                courseName += courseInfo.getJSONObject(i).getString("course_name") + " ";                teacher_comment += courseInfo.getJSONObject(i).getString("comment");                Log.e("11111111111111111－teacher_name", teacher_name);                Log.e("22222222222222222-course_Name", courseName);                Log.e("33333333333333333-teacher_comment", teacher_comment);                if (i < courseInfo.length() - 1) teacher_comment += ",";                Date aStartDate = (Date) courseInfo.getJSONObject(i).get("startTime");                Date aEndDate = (Date) courseInfo.getJSONObject(i).get("endDate");                if (startDate == null) {                    startDate = aStartDate;                    endDate = aEndDate;                } else {                    startDate = startDate.before(aStartDate) ? startDate : aStartDate;                    endDate = endDate.after(aEndDate) ? endDate : aEndDate;                }            }            teacher_Name.setText(teacher_name);            course_Name.setText(courseName);            comment.setText(teacher_comment);            setTeachingAndCommentStatus(startDate, endDate, start_teaching);        } catch (JSONException e) {        }        return view;    }    public void layoutItemWithTime(View view, int imageResource, int shape_color, String str_start_time, String str_end_time) {        ImageView statusImage = (ImageView) view.findViewById(R.id.image);//获取该布局内的图片视图        statusImage.setImageResource(imageResource);        LinearLayout time_background = (LinearLayout) view.findViewById(R.id.time_background);        TextView start_time = (TextView) view.findViewById(R.id.start_time);        TextView end_time = (TextView) view.findViewById(R.id.end_time);        time_background.setBackgroundResource(shape_color);        start_time.setText(str_start_time);        end_time.setText(str_end_time);    }    public void setTeachingAndCommentStatus(Date startDate, Date endDate, Button start_teaching) {        //未开始        if (startDate.after(new Date())) {            start_teaching.setText("未开始");            start_teaching.setBackgroundResource(R.drawable.end_nostart_button);            start_teaching.setEnabled(false);        }//已结束        else if (endDate.before(new Date())) {            start_teaching.setText("已结束");            start_teaching.setBackgroundResource(R.drawable.end_nostart_button);            start_teaching.setEnabled(false);        } else {            //正在上课            start_teaching.setText("上课中");            start_teaching.setEnabled(true);        }    }}//    - (void) getAllCoursesInfo :(NSDate *)date//    {//    [mAllStudentCourseInfo removeAllObjects];//        AVUser *user = [AVUser currentUser];//        //获取课程信息//        if (user != nil)//        {//            NSString *strMinusDate = [self getFormatDateStringWithMinus:date];//            NSDate *startDate = [self getDateFromStringWithMinus:[NSString stringWithFormat:@"%@ 00:00:00",strMinusDate]];//            NSDate *endDate = [self getDateFromStringWithMinus:[NSString stringWithFormat:@"%@ 23:59:59",strMinusDate]];////            NSLog(@"startDate:%f",[endDate timeIntervalSinceDate:startDate]);//            NSString *userID = [user objectForKey:@"objectId"];////            AVQuery *studentQuery = [AVQuery queryWithClassName:@"Course"];//        [studentQuery whereKey:@"student" equalTo:[AVObject objectWithClassName:@"_User" objectId:userID]];//            AVQuery *startTimeQuery = [AVQuery queryWithClassName:@"Course"];//        [startTimeQuery whereKey:@"startTime" greaterThanOrEqualTo:startDate];//            AVQuery *endTimeQuery = [AVQuery queryWithClassName:@"Course"];//        [endTimeQuery whereKey:@"startTime" lessThanOrEqualTo:endDate];////            AVQuery *query = [AVQuery andQueryWithSubqueries:[NSArray arrayWithObjects:studentQuery,startTimeQuery,endTimeQuery,nil]];//        [query findObjectsInBackgroundWithBlock:^(NSArray *objects, NSError *error) {//            NSMutableArray *arrAMCourse = [[NSMutableArray alloc]initWithCapacity:0];//            NSMutableArray *arrPMCourse = [[NSMutableArray alloc]initWithCapacity:0];//            NSMutableArray *arrNightCourse = [[NSMutableArray alloc]initWithCapacity:0];//            for (int i = 0; i < objects.count; i ++)//            {//                NSDictionary *dicStudentInfo = [objects objectAtIndex:i];//                NSDate *noonTime = [self getDateFromStringWithMinus:[NSString stringWithFormat:@"%@ 12:00:00",strMinusDate]];//                NSDate *nightTime = [self getDateFromStringWithMinus:[NSString stringWithFormat:@"%@ 18:00:00",strMinusDate]];//                NSDate *startDateTime = [dicStudentInfo objectForKey:@"startTime"];//                startDateTime = [startDateTime dateByAddingTimeInterval:8*60*60];//                //上午的课//                if ([startDateTime timeIntervalSince1970] < [noonTime timeIntervalSince1970])//                {//                    [arrAMCourse addObject:dicStudentInfo];//                    continue;//                }//                else if ([startDateTime timeIntervalSince1970] > [nightTime timeIntervalSince1970])//                {//                    [arrNightCourse addObject:dicStudentInfo];//                    continue;//                }//                else//                {//                    [arrPMCourse addObject:dicStudentInfo];//                    continue;//                }//            }//            if (arrAMCourse.count != 0)//                [self->mAllStudentCourseInfo setObject:arrAMCourse forKey:@"AMCourse"];//            if (arrPMCourse.count != 0)//                [self->mAllStudentCourseInfo setObject:arrPMCourse forKey:@"PMCourse"];//            if (arrNightCourse.count != 0)//                [self->mAllStudentCourseInfo setObject:arrNightCourse forKey:@"NightCourse"];////            NSLog(@"============%@",self->mAllStudentCourseInfo);//            [self->mCourseTableview reloadData];////        }];//        }